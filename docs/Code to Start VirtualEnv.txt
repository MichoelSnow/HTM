virtualenv AnomalyCheck
.\AnomalyCheck\Scripts\activate
python -m pip install --upgrade pip

#setprojectdir ..\GitHub\HTM\AnomalyCheck doesn't work

pip freeze --local > AnomalyCheckReqs.txt
pip install -r AnomalyCheckReqs.txt
deactivate


Building nupic source inside a virtualenv in windows 64 with powershell
- Install, cmake (set environment variables for all users) http://www.cmake.org/ (Your PATH environment variable must include a directory of the cmake.exe (typically "C:\Program Files (x86)\CMake\bin") tool.)
>> pip install -i https://pypi.anaconda.org/carlkl/simple mingwpy
>> pip install numpy==1.11.2


Setup Python x86 to use MinGWPy GCC compilers (I did this by hand to virtual environment directory)
>> copy nupic.core\external\windows32-gcc\bin\distutils.cfg ~\\VirtualEnv\Lib\distutils

Setup nupic.core and a place to store build files
>> cd nupic.core
>> set NUPIC_CORE=%CD%
>> mkdir build\scripts
>> cd build\scripts

Run cmake to generator MinGW Makefiles 
>> cmake -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=..\release -DPY_EXTENSIONS_DIR=..\..\bindings\py\src\nupic\bindings ..\..



Build and install NuPIC.core, and build SWIG binding libraries
>> mingw32-make -f Makefile install

Install Python SWIG nupic.bindings
>> cd %NUPIC_CORE%
>> cmake -DCMAKE_CXX_COMPILER= e:\Github\nupic.core\build\scripts\CMakeFiles\3.8.1 CMakeLists.txt
>> cmake -D CMAKE_C_COMPILER="/path/to/your/c/compiler/executable" -D CMAKE_CXX_COMPILER .\build\scripts\CMakeFiles\3.8.1 CMakeLists.txt
cmake -DCMAKE_INSTALL_PREFIX=..\release

>> python setup.py install
